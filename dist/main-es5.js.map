{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Validators/must_match.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/auth.service.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/loader.service.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/logout/logout.component.ts","webpack:///src/app/logout/logout.component.html","webpack:///src/app/notifications.service.ts","webpack:///src/app/search-input/search-input.component.ts","webpack:///src/app/search-input/search-input.component.html","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","MustMatch","controlName","matchingControlName","formGroup","control","controls","matchingControl","errors","mustMatch","value","setErrors","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","auth","title","loggedIn","logout","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthGuard","router","next","state","localStorage","getItem","navigate","providedIn","AuthService","http","loader","notifier","headerSettings","getToken","headers","email","password","post","pipe","result","setItem","token","firstName","lastName","manId","makeId","modelId","getHeaders","message","term","trim","startLoading","get","items","stopLoading","err","handlerError","name","removeItem","notify","HomeComponent","formBuilder","lastManTerm","lastMakeTerm","lastModelTerm","MAN_LOADER","MAKE_LOADER","MODEL_LOADER","getManufacturers","bind","getMakeForManufacturer","getModelsForMake","addLoaders","parentForm","group","autoMan","required","autoMake","autoModel","disable","option","Mfr_CommonName","Mfr_Name","Make_Name","Model_Name","setInputStatuses","selectedManfacturer","selectedMake","Mfr_ID","toString","selectedModel","Make_ID","displayManufacturer","displayMake","placeOrder","Model_ID","subscribe","initialState","error","loaderIndicator","loaders","reset","makeEnable","makeReset","modelEnable","modelReset","enable","allSelected","valid","onSelectManufacturer","onSelectMake","onSelectModel","onSubmit","LoaderService","names","i","length","addLoader","LoginComponent","login","form","LogoutComponent","NotificationsService","snackBar","action","success","duration","open","panelClass","SearchInputComponent","loading","onSelectOption","searchTerms$","onDataSource","items$","initItems","emit","dataSource","renderOptionInMenu","onInputChange","onSelect","SignupComponent","submitted","firstNameValidators","minLength","maxLength","lastNameValidators","emailValidators","passwordValidators","confirmPasswordValidators","compose","confirmPassword","validator","invalid","signup","environment","production","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { FormGroup } from '@angular/forms';\n\n\nexport function MustMatch(controlName: string, matchingControlName: string) {\n    return (formGroup: FormGroup) => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n            // return if another validator has already found an error on the matchingControl\n            return;\n        }\n\n        // set error on matchingControl if validation fails\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ mustMatch: true });\n        } else {\n            matchingControl.setErrors(null);\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { HomeComponent } from './home/home.component';\nimport { LogoutComponent} from './logout/logout.component';\n\n\nimport { AuthGuard } from './auth.guard';\n\nconst routes: Routes = [\n  {path: '',   redirectTo: 'home', pathMatch: 'full' },\n  {path: 'login', component: LoginComponent},\n  {path: 'signup', component: SignupComponent},\n  {path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\n  {path: 'logout', component: LogoutComponent},\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport {AuthService} from './auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'vehicles-app';\n\n  constructor(private auth: AuthService) {}\n\n  loggedIn() {\n  \treturn this.auth.loggedIn;\n  }\n\n  logout(){\n    this.auth.logout();\n  }\n  ngOnInit() {\n\n  }\n}\n","\n<mat-toolbar color=\"primary\">\n\t   <mat-toolbar-row>\n\t      <div *ngIf=\"!loggedIn()\">\n\t\t\t  <a mat-button routerLink=\"/signup\">Register</a>\n\t\t      <a mat-button routerLink=\"/login\">Login</a>\n\t\t  </div>\n\t      <div *ngIf=\"loggedIn()\">\n\t      \t  <a mat-button routerLink=\"/home\">Home</a>\n\t      \t  <span class=\"spacer\"></span>\n\t\t\t  <a mat-button routerLink=\"/logout\" (click)=\"logout()\">Logout</a>\n\t\t  </div>\n\n\t   </mat-toolbar-row>\n\t\n</mat-toolbar>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatToolbarModule} from  '@angular/material/toolbar';\nimport  {MatButtonModule} from  '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\n\n\n\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { HomeComponent } from './home/home.component';\nimport { SearchInputComponent } from './search-input/search-input.component';\n\nimport { AuthService } from './auth.service';\nimport { AuthGuard } from './auth.guard';\nimport { LoaderService } from \"./loader.service\";\nimport { LogoutComponent } from './logout/logout.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    HomeComponent,\n    SearchInputComponent,\n    LogoutComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatSnackBarModule,\n    MatAutocompleteModule,\n    MatProgressSpinnerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatCardModule,\n    \n  ],\n  providers: [\n    AuthService,\n    AuthGuard,\n    LoaderService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router) { }\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (localStorage.getItem('access_token')) {\n      return true;\n    }\n\n    this.router.navigate(['login']);\n    return false;\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse  } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, tap, catchError } from 'rxjs/operators';\nimport { LoaderService } from './loader.service';\n\nimport {\n\tResponse,\n\tManufacturerApiResult,\n\tMakeApiResult,\n\tModelApiResult,\n} from './types';\n\nimport { NotificationsService } from './notifications.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\tconstructor(\n\t\tprivate http: HttpClient,\n\t\tprivate loader: LoaderService,\n\t\tprivate notifier: NotificationsService,\n\t) { }\n\n\tprivate getHeaders(){\n\n\t\tconst headerSettings = {\n\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'Authorization': `Bearer ${this.getToken()}`\n\t\t}\n\n\t\treturn  {\n\t    \theaders: new HttpHeaders(headerSettings)\n\t  \t};\n\t}\t\t\n\n\tlogin(email: string, password: string): Observable<boolean> {\n\t\treturn this.http.post<{token: string}>('/api/auth', {email, password})\n\t\t\t.pipe(\n\t\t\t\tmap(result => {\n\n\t\t\t\t\tlocalStorage.setItem('access_token', result.token);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t}\n\n\tsignup(\n\t\tfirstName: string,\n\t\tlastName: string,\n\t\temail: string, \n\t\tpassword: string,\n\t): Observable<boolean> {\n\n\t\treturn this.http.post<{token: string}>(\n\t\t\t'/api/signup', \n\t\t\t{firstName, lastName, email, password}\n\t\t)\n\t\t.pipe(\n\t\t\tmap(result => {\n\t\t\t\tlocalStorage.setItem('access_token', result.token);\n\t\t\t\treturn true;\n\t\t\t})\n\t\t);\n\t}\n\n\tplaceOrder(\n\t\tmanId: string,\n\t\tmakeId: string,\n\t\tmodelId: string, \n\t): Observable<string> {\n\t\treturn this.http.post<Response<string>>(\n\t\t\t'/api/placeorder', \n\t\t\t{manId, makeId, modelId},\n\t\t\tthis.getHeaders(),\n\t\t)\n\t\t.pipe(\n\t\t\tmap(result => {\n\t\t\t\treturn result.message;\n\t\t\t})\n\t\t);\n\t}\n\tgetManufacturers(term: string, loader: string): Observable<Array<ManufacturerApiResult>>{\n\t    if (!term.trim()) {\n\t      term = '';\n\t    }\n\n\t    // start loading\n\t    this.loader.startLoading(loader);\n\t\t\n\t\treturn this.http.get<Response<Array<ManufacturerApiResult>>>(\n\t\t\t`/api/allmanufacturers?term=${term}`,\n\t\t\tthis.getHeaders(),\n\t\t)\n\t\t.pipe(\n\t\t\tmap(result => {\n\t\t\t\treturn result.items\n\t\t\t}),\n\t\t\ttap(result => {\n\t\t\t\t// stop loading\n\t\t\t\tthis.loader.stopLoading(loader);\n\t\t\t}),\n\t\t\tcatchError((err: HttpErrorResponse) => this.handlerError(err, loader))\n\t\t)\n\n\t}\n\n\tgetMakeForManufacturer(manId: string, term: string, loader: string): Observable<Array<MakeApiResult>>{\n\t    \n\t    // start loading\n\t    this.loader.startLoading(loader);\n\t\t\n\t\treturn this.http.get<Response<Array<MakeApiResult>>>(\n\t\t\t`/api/makeformanufacturer?man_id=${manId}&term=${term}`,\n\t\t\tthis.getHeaders(),\n\t\t)\n\t\t.pipe(\n\t\t\tmap(result => result.items),\n\t\t\ttap(result => {\n\t\t\t\t// stop loading\n\t\t\t\tthis.loader.stopLoading(loader);\n\t\t\t}),\n\t\t\tcatchError((err: HttpErrorResponse) => this.handlerError(err, loader))\n\t\t)\n\n\t}\n\n\tgetModelsForMake(name: string, id:string, term: string, loader): Observable<Array<ModelApiResult>>{\n\t    // start loading\n\t    this.loader.startLoading(loader);\n\t\t\n\t\treturn this.http.get<Response<Array<ModelApiResult>>>(\n\t\t\t`/api/getmodelsformake/${name}?makeid=${id}&term=${term}`,\n\t\t\tthis.getHeaders(),\n\t\t)\n\t\t.pipe(\n\t\t\tmap(result => result.items),\n\t\t\ttap(result => {\n\t\t\t\t// stop loading\n\t\t\t\tthis.loader.stopLoading(loader);\n\t\t\t}),\n\t\t\tcatchError((err: HttpErrorResponse) => this.handlerError(err, loader))\n\t\t)\n\n\t}\n\n\tlogout() {\n\t\t// Make request to the server for logout\n\t\t// TODO(Jameel) - Add http request to /api/logout\n\n\n\t\t// then remove the token from localStorage\n\t\tlocalStorage.removeItem('access_token');\n\t}\n\n\tprivate getToken(): string {\n\t\treturn localStorage.getItem('access_token');\n\t}\n\n\tprivate handlerError(err: HttpErrorResponse, loader: string) {\n\t\tthis.loader.stopLoading(loader);\n\t\t// const errMsg = err.error.error[0].Message;\n\t\tthis.notifier.notify('Something went wrong!', 'Dismiss', false)\n\t\treturn of([]);\n\t}\n\n\tpublic get loggedIn(): boolean {\n\t\treturn (localStorage.getItem('access_token') !== null);\n\t}\n}\n","import {Component, OnInit} from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\n\nimport { Observable, Subject } from 'rxjs';\n\nimport {\n\tfirst,\n\tfilter,\n\tmap,\n\tstartWith,\n\tdebounceTime,\n\tdistinctUntilChanged,\n\tswitchMap,\n} from 'rxjs/operators';\n\n\nimport { AuthService } from '../auth.service';\nimport { LoaderService } from '../loader.service';\nimport { NotificationsService } from '../notifications.service';\nimport {\n\tManufacturerApiResult,\n\tMakeApiResult,\n\tModelApiResult\n} from '../types';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n\t// These will hold the selected options from autocomplete\n\tprivate selectedManfacturer;\n\tprivate selectedMake;\n\tprivate selectedModel;\n\n\t// group form\n\tparentForm: FormGroup;\n\n\t// We want to keep tracking the last search\n\t// in order to avoid unnecessary search\n\tlastManTerm: string = '';\n\tlastMakeTerm: string = '';\n\tlastModelTerm: string = '';\n\n\n\t// this will be a key for loading indicator for each input\n\tMAN_LOADER: string = 'ManufactureLoaderIndicator';\n\tMAKE_LOADER: string = 'MakeLoaderIndicator';\n\tMODEL_LOADER: string = 'ModelLoaderIndicator';\n\n\tconstructor( \n\t\tprivate auth: AuthService,\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate loader: LoaderService,\n\t\tprivate router: Router,\n\t\tprivate notifier: NotificationsService,\n\t ) {\n\t\tthis.getManufacturers = this.getManufacturers.bind(this);\n\t\tthis.getMakeForManufacturer = this.getMakeForManufacturer.bind(this);\n\t\tthis.getModelsForMake = this.getModelsForMake.bind(this);\n\t}\n\n\tngOnInit() {\n\t\t// create loading indicator for each search input\n\t\tthis.loader.addLoaders([this.MAN_LOADER, this.MAKE_LOADER, this.MODEL_LOADER]);\n        \n        // create group form with Validators\n        this.parentForm = this.formBuilder.group({\n            autoMan: ['', Validators.required],\n            autoMake: ['', Validators.required],\n            autoModel: ['', Validators.required],\n        });\n\n        // start with disabled inputs\n        this.parentForm.get('autoMake').disable();\n        this.parentForm.get('autoModel').disable();\n\t}\n\n\tdisplayManufacturer(option: ManufacturerApiResult): string {\n\t\tif(!option)\n\t\t\treturn ''\n\t\treturn option ? option.Mfr_CommonName : (option.Mfr_Name? option.Mfr_Name: '');\n\t}\n\n\tdisplayMake(option: MakeApiResult): string {\n\t\treturn option ? option.Make_Name : '';\n\t}\n\n\tdisplayModel(option: ModelApiResult): string {\n\t\treturn option ? option.Model_Name : '';\n\t}\n\t\n\tgetManufacturers(term: string): Observable<ManufacturerApiResult[]> {\n\t\tif(term != this.lastManTerm){\n\t\t\tthis.setInputStatuses(false,true,false,true);\n\t\t}\n\n\t\tthis.selectedManfacturer = null;\n\t\tthis.lastManTerm = term;\n\t\treturn this.auth.getManufacturers(term, this.MAN_LOADER);\n\t}\n\n\tgetMakeForManufacturer(term: string): Observable<MakeApiResult[]> {\n\t\tif(term != this.lastMakeTerm){\n\t\t\tthis.setInputStatuses(true,false,false,true);\n\t\t}\n\n\t\tthis.selectedMake = null;\n\t\tthis.lastMakeTerm = term;\n\t\treturn this.auth.getMakeForManufacturer(this.selectedManfacturer.Mfr_ID.toString(), term, this.MAKE_LOADER);\n\t}\n\n\tgetModelsForMake(term: string): Observable<ModelApiResult[]> {\n\t\tthis.selectedModel = null;\n\t\treturn this.auth.getModelsForMake(\n\t\t\tthis.selectedMake.Make_Name.toString(),\n\t\t\tthis.selectedMake.Make_ID,\n\t\t\tterm,\n\t\t\tthis.MODEL_LOADER,\n\t\t);\n\t}\n\n\tonSelectManufacturer({option} : MatAutocompleteSelectedEvent) {\n\t\tthis.selectedManfacturer = option.value;\n\t\tthis.lastManTerm = this.displayManufacturer(option.value);\n\n\t\tthis.setInputStatuses(true,true,false,true);\n\t}\n\t\n\tonSelectMake({option} : MatAutocompleteSelectedEvent) {\n\t\tthis.selectedMake = option.value;\n\t\tthis.lastMakeTerm = this.displayMake(option.value);\n\t\tthis.setInputStatuses(true,false,true,false);\n\t}\n\n\tonSelectModel({option} : MatAutocompleteSelectedEvent) {\n\t\tthis.selectedModel = option.value;\n\t}\n\t\n\tonSubmit() {\n\n\t    this.auth.placeOrder(\n\t    \tthis.selectedManfacturer.Mfr_ID,\n\t    \tthis.selectedMake.Make_ID,\n\t    \tthis.selectedModel.Model_ID,\n    \t)\n\t\t.pipe(first())\n\t\t.subscribe(\n\t\t\tmessage => {\n\t\t\t\tthis.initialState();\n\t\t\t\tthis.notifier.notify(message, 'Dismiss')\n\t\t\t},\n\t\t\terr => this.notifier.notify(err.error, 'Dismiss', false)\n\t\t);\n\t}\n\n\tget f() { return this.parentForm.controls; }\n\n\tisLoading(loaderIndicator: string) {\n\t\treturn this.loader.loaders[loaderIndicator] || false;\n\t}\n\n\tprivate initialState() {\n\t\tthis.parentForm.reset();\n\t\tthis.selectedManfacturer = null;\n\t\tthis.selectedMake = null;\n\t\tthis.selectedModel = null;\n\t\tthis.setInputStatuses(false, true, false, true);\n\t}\n\n\tprivate setInputStatuses(\n\t\tmakeEnable: boolean, makeReset: boolean,\n\t\tmodelEnable: boolean, modelReset: boolean,\n\t\t)\n\t{\n\t\tif(makeEnable){\n\t\t\tthis.parentForm.get('autoMake').enable();\n\t\t}\n\t\telse {\n\t\t\tthis.parentForm.get('autoMake').disable();\n\t\t}\n\t\tif(makeReset){\n\t\t\tthis.parentForm.get('autoMake').reset();\t\n\t\t}\n\n\t\tif(modelEnable){\n\t\t\tthis.parentForm.get('autoModel').enable();\n\t\t}\n\t\telse {\n\t\t\tthis.parentForm.get('autoModel').disable();\n\t\t}\n\t\tif(modelReset){\n\t\t\tthis.parentForm.get('autoModel').reset();\t\n\t\t}\n\t}\n\t\n\tisDisabled() {\n\t\tconst allSelected = this.selectedManfacturer && this.selectedMake && this.selectedModel;\n\t\treturn !this.parentForm.valid || !allSelected;\n\t}\n\n}\n","<div class=\"home-app\">\n      <mat-toolbar class=\"page-toolbar\">\n       <div>Select your vehicle</div>\n    </mat-toolbar>\n  <mat-card class=\"login-container\">\n     <mat-card-content>\n        <form [formGroup]=\"parentForm\">\n           \n\t\t\t<app-search-input \n\t\t\t\t[label]=\"'Manufacturer'\"\n\t\t\t\t[loading]=\"isLoading(MAN_LOADER)\"\n\t\t\t\t[renderOptionInInput]=\"displayManufacturer\"\n\t\t\t\t[renderOptionInMenu]=\"displayManufacturer\"\n\t\t\t\t[parentForm]=\"parentForm\"\n\t\t\t\t[nameOfControl]=\"'autoMan'\"\n\t\t\t\t[dataSource]=\"getManufacturers\"\n\t\t\t\t(onSelectOption)=\"onSelectManufacturer($event)\"\n\t\t\t>\n\t\t\t</app-search-input>\n\t  \n\t   \t\t<app-search-input \n\t\t\t\t[label]=\"'Make'\"\n\t\t\t\t[loading]=\"isLoading(MAKE_LOADER)\"\n\t\t\t\t[renderOptionInInput]=\"displayMake\"\n\t\t\t\t[renderOptionInMenu]=\"displayMake\"\n\t\t\t\t[parentForm]=\"parentForm\"\n\t\t\t\t[nameOfControl]=\"'autoMake'\"\n\t\t\t\t[dataSource]=\"getMakeForManufacturer\"\n\t\t\t\t(onSelectOption)=\"onSelectMake($event)\"\n\t\t\t>\n\t\t\t</app-search-input>\n\n\t\t\t<app-search-input \n\t\t\t\t[label]=\"'Model'\"\n\t\t\t\t[loading]=\"isLoading(MODEL_LOADER)\"\n\t\t\t\t[renderOptionInInput]=\"displayModel\"\n\t\t\t\t[renderOptionInMenu]=\"displayModel\"\n\t\t\t\t[parentForm]=\"parentForm\"\n\t\t\t\t[nameOfControl]=\"'autoModel'\"\n\t\t\t\t[dataSource]=\"getModelsForMake\"\n\t\t\t\t(onSelectOption)=\"onSelectModel($event)\"\n\t\t\t>\n\t\t\t</app-search-input> \n        </form>\n     </mat-card-content>\n     <mat-card-actions class=\"card-actions\">\n        <button mat-raised-button [disabled]=\"isDisabled()\" (click)=\"onSubmit()\" color=\"primary\">Submit</button>\n     </mat-card-actions>\n  </mat-card>\n</div>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  loaders: {[name: string]: boolean} = {};\n\n  constructor() {}\n\n  addLoaders(names: Array<string>, value: boolean = false){\n    for(let i = 0; i < names.length; i++){\n      this.addLoader(names[i], value);\n    }\n  }\n  addLoader(name: string, value: boolean = false){\n    this.loaders[name] = value;\n  }\n\n\n  startLoading(name: string) {\n  \tthis.loaders[name] = true;\n  }\n\n  stopLoading(name: string) {\n  \tthis.loaders[name] = false;\n  }\n\n  isLoading(name: string) {\n  \treturn this.loaders[name];\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\n\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AuthService } from '../auth.service';\nimport { NotificationsService } from '../notifications.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n    form: FormGroup;\n    error: any;\n\n    constructor(\n    \tprivate formBuilder: FormBuilder,\n    \tprivate auth: AuthService,\n    \tprivate router: Router,\n        private notifier: NotificationsService,\n\t) {}\n\n\tpublic onSubmit() {\n\t    this.auth.login(this.form.value.email, this.form.value.password)\n\t\t\t.pipe(first())\n\t\t\t.subscribe(\n\t\t\t\tresult => this.router.navigate(['home']),\n\t\t\t\terr => this.notifier.notify(err.error, 'Dismiss', false)\n\t\t\t);\n\t}\n\n    ngOnInit() {\n        if (this.auth.loggedIn){\n            this.router.navigate(['home']);\n        }\n        this.form = this.formBuilder.group({\n            \"email\": [\"\", [Validators.required, Validators.email]],\n            \"password\":[\"\", Validators.required],\n        });\n    }\n\n}\n","<div class=\"login-app\">\n    <mat-toolbar class=\"page-toolbar\">\n       <div>Welcome to login page</div>\n    </mat-toolbar>\n  <mat-card class=\"login-container\">\n     <mat-card-content>\n        <form [formGroup]=\"form\">\n           <mat-form-field class=\"full-width\">\n              <mat-label>Email</mat-label>\n              <input  matInput  placeholder=\"Email\" formControlName=\"email\">\n           </mat-form-field>\n           <mat-form-field class=\"full-width\">\n              <mat-label>Password</mat-label>\n              <input  matInput  type=\"password\" placeholder=\"Password\" formControlName=\"password\">\n           </mat-form-field>\n        </form>\n     </mat-card-content>\n     <mat-card-actions class=\"card-actions\">\n        <button mat-raised-button (click)=\"onSubmit()\"  [disabled]=\"!form.valid\" color=\"primary\">LOGIN</button>\n        <span>Don't have account? <a mat-button routerLink=\"/signup\" color=\"accent\">Register</a></span>\n     </mat-card-actions>\n  </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<mat-toolbar class=\"page-toolbar\">\n   <div>Thank you, good bye!</div>\n</mat-toolbar>\n","import { Injectable } from '@angular/core';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  \tconstructor(private snackBar: MatSnackBar) { }\n\n\tnotify(message: string, action: string, success: boolean = true, duration: number = 4000) {\n\t    this.snackBar.open(message, action, {\n\t      duration,\n\t      panelClass: [success? 'success-snackbar': 'failed-snackbar']\n\t    });\n  \t}\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {MatAutocompleteSelectedEvent} from '@angular/material/autocomplete';\n\nimport { Observable, Subject, of } from 'rxjs';\nimport {\n\tfilter,\n\tmap,\n\tstartWith,\n\tdebounceTime,\n\tdistinctUntilChanged,\n\tswitchMap,\n} from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-search-input',\n  templateUrl: './search-input.component.html',\n  styleUrls: ['./search-input.component.scss']\n})\nexport class SearchInputComponent<T> implements OnInit {\n\n \t@Input() parentForm: FormGroup;\n \t@Input() nameOfControl: string;\n \t@Input() label: string;\n \t@Input() loading: boolean = false;\n\n\t// renderer for option in the menu.\n\t@Input() renderOptionInInput: Function;\n\n\t// rendere selected option in the input.\n\t@Input() renderOptionInMenu: Function;\n\n\t// dataSource for getting suggestions in autocomplete\n\t@Input() dataSource: (term: string) => Observable<T>;\n\t@Output() onSelectOption: EventEmitter<MatAutocompleteSelectedEvent> = new EventEmitter();\n\n\n\titems$: Observable<T>;\n\n\tprivate searchTerms$ = new Subject<string>();\n\n\tconstructor() { \n\t\tthis.onDataSource = this.onDataSource.bind(this);\n\t}\n\n\t// Push a search term into the observable stream.\n\tonInputChange(term: string): void {\n\t\tthis.searchTerms$.next(term);\n\t}\n\n\tprivate initItems() {\n    \tthis.items$ = this.searchTerms$.pipe(\n\t      // wait 300ms after each keystroke before considering the term\n\t      debounceTime(300),\n\n\t      // ignore new term if same as previous term\n\t      distinctUntilChanged(),\n\n\t      // switch to new search observable each time the term changes\n\t      switchMap((term: string) => this.onDataSource(term)),\t\n\t    );\n\t}\n\tngOnInit() {\n\t\tthis.initItems();\n\t}\n\n\tonSelect(e: MatAutocompleteSelectedEvent){\n\t\tthis.onSelectOption.emit(e);\n\t}\n\n\tonDataSource(term: string) {\n\t\t return this.dataSource(term);\n\t}\n\n\trenderOptionInMenuFn(option: T){\n\t\treturn this.renderOptionInMenu(option);\n\t}\n}\n","\n<mat-form-field [formGroup]=\"parentForm\" class=\"full-width\">\n\t<mat-label>{{label}}</mat-label>\n\t\t<input class=\"vs-input\" type=\"text\" aria-label=\"search-input\" matInput [formControlName]=\"nameOfControl\" [matAutocomplete]=\"automan\" #searchBox (input)=\"onInputChange(searchBox.value)\" (click)=\"!searchBox.value && onInputChange(searchBox.value)\">\n\t<mat-autocomplete #automan=\"matAutocomplete\" (optionSelected)=\"onSelect($event)\" [displayWith]=\"renderOptionInInput\">\n\t  <mat-option *ngFor=\"let option of items$ | async\" [value]=\"option\" \n\t  >\n\t    {{renderOptionInMenuFn(option)}}\n\t  </mat-option>\n\t</mat-autocomplete>\n\t<div *ngIf=\"loading\" class=\"vs-spinner-wrapper\">\n\t\t<mat-spinner diameter=20></mat-spinner>\n\t</div>\n</mat-form-field>","import { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl\n} from '@angular/forms';\n\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AuthService } from '../auth.service';\nimport { NotificationsService } from '../notifications.service';\nimport  {MustMatch} from '../Validators/must_match';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  form: FormGroup;\n  submitted: boolean = false;\n  error: string = \"\";\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private auth: AuthService,\n    private router: Router,\n    private notifier: NotificationsService,\n  ) {}\n\n  ngOnInit() {\n    \n    const firstNameValidators = [\n      Validators.required,\n      Validators.minLength(2), // at least 2 chars for name\n      Validators.maxLength(25), // Avoid inserting long text\n    ]\n\n    const lastNameValidators = [Validators.maxLength(25)]; // avoid too long text\n\n    const emailValidators = [\n      Validators.required,\n      Validators.email,\n      Validators.maxLength(35),   \n    ];\n\n    const passwordValidators = [\n      Validators.required,\n      Validators.minLength(6),\n    ];\n\n    const confirmPasswordValidators = [\n      Validators.required,\n    ];\n\n    this.form = this.formBuilder.group({\n      firstName:['', Validators.compose(firstNameValidators)],\n      lastName:['', Validators.compose(lastNameValidators)],\n      email: ['', Validators.compose(emailValidators)],\n      password: ['', Validators.compose(passwordValidators)],\n      confirmPassword: ['', Validators.compose(confirmPasswordValidators)],\n    },\n    {\n      validator: MustMatch('password', 'confirmPassword')  \n    });\n  }\n\n\n  get f() { return this.form.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.form.invalid) {\n      return;\n    }\n\n    this.auth.signup(\n      this.form.value.firstName,\n      this.form.value.lastName,\n      this.form.value.email, \n      this.form.value.password,\n    )\n    .pipe(first())\n    .subscribe(\n      result => {\n        this.notifier.notify('User created successfully' , 'Dismiss')\n        this.router.navigate(['home'])\n      },\n      err => this.notifier.notify(err.error, 'Dismiss', false)\n    );\n    this.form.reset();\n    \n  }\n}\n\n","<div class=\"signup-app\">\n    <mat-toolbar class=\"page-toolbar\">\n        <div>Sign up by email and password</div>\n    </mat-toolbar>\n    <mat-card class=\"signup-container\">\n     <mat-card-content>\n        <form [formGroup]=\"form\">\n           <mat-form-field class=\"full-width\">\n              <mat-label>First Name</mat-label>\n                <input matInput type=\"text\" formControlName=\"firstName\"/>\n           </mat-form-field>\n           <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n                <div *ngIf=\"f.firstName.errors.minlength\">First Name must be at least 2 charecters</div>\n            </div>\n\n           <mat-form-field class=\"full-width\">\n              <mat-label>Last Name</mat-label>\n                <input matInput type=\"text\" formControlName=\"lastName\"/>\n           </mat-form-field>\n\n           <mat-form-field class=\"full-width\">\n              <mat-label>Email</mat-label>\n                <input matInput type=\"email\" formControlName=\"email\"/>\n           </mat-form-field>\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n            </div>\n\n           <mat-form-field class=\"full-width\">\n              <mat-label>Password</mat-label>\n              <input  matInput  type=\"password\" placeholder=\"Password\" formControlName=\"password\">\n           </mat-form-field>\n           <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n            </div>\n\n\n           <mat-form-field class=\"full-width\">\n              <mat-label>Confirm Password</mat-label>\n              <input  matInput  type=\"password\" formControlName=\"confirmPassword\">\n           </mat-form-field>\n            <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\n                <div *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</div>\n            </div>       \n\n        </form>\n     </mat-card-content>\n     <mat-card-actions class=\"card-actions\">\n        <button mat-raised-button (click)=\"onSubmit()\" color=\"primary\">Signup</button>\n        <span>Have an account? <a mat-button routerLink=\"/login\" color=\"accent\">Login</a></span>\n     </mat-card-actions>\n  </mat-card>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}